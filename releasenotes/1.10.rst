.. _releasenotes/1.10:

=======================
Dojo 1.10 Release Notes
=======================

.. contents ::
   :depth: 3

User Agent Support
==================

The following user agents have been tested and are supported in this release. If a user agent version is not listed as 
supported, it still may work, especially on browsers with rapid release cycles (Chrome, Firefox). Future minor releases
of Dojo might include fixes to support future releases of these browsers, but it is not guaranteed.

**Desktop**

* Firefox 3.6-29

* Safari 5-7

* Chrome 13-33

* IE 8-11

* Opera 10.50-12 (Dojo core only)

**Mobile (dojox/mobile)**

* iOS 5.x (Mobile Safari), 6.x and 7.x (including all Dijit widgets except Editor)

* Android 2.3, 4.0-4.4 (Platform browser) (including all Dijit widgets for Android 4.0-4.4 except Editor)

* BlackBerry 6-7 & 10 (Platform browser)

* Windows Phone 8 (IE10)

* Mobile compatibility on desktop browsers: IE 8-11, Firefox 4-29, Chrome 13-33


**Server-Side User Agents**

* Node 0.8.X, 0.10.X

Dojo Core
=========
* Added a cross-browser approach for getting textContent in dojo/dom-prop
* Added support for running non-DOM operations inside of WebWorkers
* Added reusable HTML escape function
* Various fixes for dojo/query
* `dojo/on` now allows multiple events by using a comma separated list, or an array for multiple extension events

Dijit
=====

Dialog
------
Added support for Dialog.resize(dimensions).  Previously it ignored the dimensions parameter.
This means that Dialog now works with dojox/layout/ResizeHandle.
Note though that you still cannot specify an initial size on the dialog.

DojoX
=====

Calendar
--------
 * Decoration items support has been added. The calendar views are now supporting a decorationStore property to set a store to specify decoration items that will be displayed in the background below the data item renderers. A decoration item has the same major properties as regular data item especially start and end time.
 * In columns view, each column representing a day can be divided into sub columns for categories, persons etc. See corresponding on the documentation for more information on this feature.
 * A minimal width of a column (or a sub column if sub columns are configured) can now be by setting the minColumnWidth property on the column view. If columns or, if sub columns are specified, sub columns, are smaller than this property value, this property value is set and a horizontal scroll bar is displayed. Otherwise all the available space is used.
 * Columns view is now supporting overnight display. The column view maxHours property can now go up to 36 (=12h the next day). To display the night simply set minHours to 12 and maxHours to 36.
 * Constraints to limit the time range accessible through navigation has beed added. Set the minDate and maxDate properties to specify the range.
 * A current time indicator was added to the column view.

Charting
--------
 * Series can now be hidden without removing them
 * SelectableLegend leverages this new feature to provide consistent approach to series visibility switch across the various plots
 * All classes inheriting from Element, an in particular all type of plots can now be set SVG rendering options using the renderingOptions property. By default axis2d/Default, plot2d/Columns and plot2d/Bars are using shape-rendering: crispEdges.
 * Spider plot now accepts an animate property. If set to false it prevents animation from running. Like animate properties of other plot types, it allows to customize the animation duration and other animation properties. 

Gfx
---
 * Support for SVG masks (when using the SVG renderer). The Surface class has a new createMask method, which returns a group-like shape whose child shapes will define the geometry of the mask. Any shape can then use this mask using the setMask method.

Mobile
------
 * The Carousel, Slider, SpinWheel, TimePicker and DatePicker widgets are now accessible.
 * Enhance touch feedback for Buttons
 * The width of a Switch widget can explicitely be set via css to support long label.
 * Improve performance of List with variable height items: the layout of variable height items is no longer updated on each resize by default. You can enable it back by setting the new ListItem.layoutOnResize property to true (false by default).

Store
-----
 * Added local `dojo/store` providers in dojox, with support for IndexedDB and WebSQL

Editor BidiSupport plugin
-------------------------
 * This plugin provides advanced bidirectional (bidi) support for the rich text editing widget. It adds several bidi-specific commands, which are not released in native RTE's ('set text direction to left-to-right', 'set text direction to right-to-left', 'change text direction to opposite'). Commands are executed for selected block-level elements by changing their styles.


Util
====

**Builder**

Added support for uglify-js 2.x builder. To use uglify-js 2.x, just upgrade from 1.x. If optimizeOptions is used, some of the options may need to be changed to match uglify-js 2.x naming, see `Uglilfy 2 documentation <https://github.com/mishoo/UglifyJS2>`_ on the new options available.

In addition, multiple processes will be used while running uglify builder. In previous versions, only one CPU core is being used.

Demos
=====

Migration Notes
===============
